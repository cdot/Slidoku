/*Copyright (C) 2024 Crawford Currie http://c-dot.co.uk
  License Apache 2.0. See README.md at the root of this distribution for full copyright
  and license information.*/
import chai from "chai";
const assert = chai.assert;

import { Board } from "../src/Board.js";
import { solve } from "../src/Solver.js";

const EASY = `
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

| |3|4| | |7| | |8|
| |8| | |6|5| | | |
| | | |3| | | |7| |
|2| | | | | |7| | |
|7|1| | |4| | |9|6|
| | |5| | | | | |1|
| |5| | | |2| | | |
| | | |1|7| | |6| |
|6| | |9| | |4|3| |
`;

const HARD1 = `
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

|1| |4| | | |2| | |
| | | |8| | |4| | |
|7| | | | | | | | |
|3| | | | | | |1| |
| | | |4| | | |7| |
| | | |2| |5| | | |
| |8| | | | | |3| |
| |5| | | | |6| | |
| | | | |1| | | | |
`;

const HARD2 = `# Unused
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

|3|4| | |7| | |8|
| |8| | |6|5| | | |
| | | |3| | | |7| |
|2| | | | | |7| | |
|7|1| | |4| | |9|6|
| | |5| | | | | |1|
| |5| | | |2| | | |
| | | |1|7| | |6| |
|6| | |9| | |4|3| |
`;

const JIGSAW = `123456789
|0|0|0|0|1|1|1|2|2|
|0|3|0|1|1|2|2|2|2|
|3|3|0|1|1|4|2|5|2|
|3|0|0|1|1|4|2|5|5|
|3|3|4|4|4|4|4|5|5|
|3|3|6|4|7|7|8|8|5|
|6|3|6|4|7|7|8|5|5|
|6|6|6|6|7|7|8|5|8|
|6|6|7|7|7|8|8|8|8|

| | | |4| |2|6|7| |
| |9| |7|5| |1| | |
|6| | | | |4| | | |
|5| | | | | | |3| |
| | | | | | | | | |
| |8| | | | | | |1|
| | | |3| | | | |7|
| | |2| |1|3| |6| |
| |5|4|2| |6| | | |
`;

describe("Solver", () => {
  function UNit() {}

  UNit("easy", () => {
    const b = Board.loadPuzzle(EASY);
    assert.equal(b.firstFix(), 13);
    console.log(solve(b));
    assert(b.isSolved(), b.savePossibilities());
  });

  UNit("hard 1", () => {
    const b = Board.loadPuzzle(HARD1);
    assert.equal(b.firstFix(), 0);
    console.log(solve(b));
    assert(b.isSolved(), b.savePossibilities());
    console.log(b.saveBoard());
  });

  it("master", () => {
    const b = Board.loadPuzzle(`
123456789
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

| |8|2| | | | | |7|
| | | | | |5| | | |
|6| | |9|2| |3| | |
|1| | | | |4| | | |
| | | | | |6|5| | |
| | |7|2|5| | | |3|
| | |6| | | | |9| |
| | | |4| | | | | |
|9| | |3|1| |2| | |`);
    
    assert.equal(b.firstFix(), 0);
    console.debug(b.savePossibilities());
    b.report = console.debug;
    console.log(solve(b));
    assert(b.isSolved(), b.savePossibilities());
  });

  UNit("jigsaw", () => {
    const b = Board.loadPuzzle(JIGSAW);
    assert.equal(b.firstFix(), 1);
    console.log(solve(b));
    assert(b.isSolved(), b.savePossibilities());
  });

  UNit("5 y-wings", () => {
    // Fiendish puzzle from
    // https://www.sudokuwiki.org/sudoku.htm?bd=900040000000600031020000090000700020002935600070002000060000073510009000000080009
    const b = Board.loadPuzzle(`
123456789
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

|9| | | |4| | | | |
| | | |6| | | |3|1|
| |2| | | | | |9| |
| | | |7| | | |2| |
| | |2|9|3|5|6| | |
| |7| | | |2| | | |
| |6| | | | | |7|3|
|5|1| | | |9| | | |
| | | | |8| | | |9|
`);
    assert.equal(b.firstFix(), 0);
    console.log(solve(b));
    assert(b.isSolved(), b.savePossibilities());
  });
});
