import chai from "chai";
const assert = chai.assert;

import { Board } from "../src/Board.js";
import { Tuples } from "../src/Tuples.js";

const BLANK = `
123456789
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|0|0|0|1|1|1|2|2|2|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|3|3|3|4|4|4|5|5|5|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|
|6|6|6|7|7|7|8|8|8|

| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
| | | | | | | | | |
`;

describe("Tuples", () => {

  it("area", () => {
    const b = Board.loadPuzzle(BLANK);
    b.loadPossibilities(`
|123      |123      |123456789|123456789|123456789|123456789|123456789|123456789|123456789|
| 23456789|1 3456789|12 456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123      |123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
`);
    // 3 cells in area 0 have the same possibilities
    assert.equal(Tuples.area(b), 0); // expect no fixes!
    //console.log(b.savePossibilities());
    b.checkPossibilities(`
|123      |123      |   456789|123456789|123456789|123456789|123456789|123456789|123456789|
|   456789|   456789|   456789|123456789|123456789|123456789|123456789|123456789|123456789|
|   456789|   456789|123      |123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
`, e => assert(false, e));
  });

  it("row", () => {
    const b = Board.loadPuzzle(BLANK);
    b.loadPossibilities(`
|123      |123      | 23456789|1 3456789|12 456789|123456789|123456789|123456789|123      |
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
`);
    // 3 cells in row 0 have the same possibilities
    assert.equal(Tuples.row(b), 0); //expect no fixes!
    //console.log(b.savePossibilities());
    b.checkPossibilities(`
|123      |123      |   456789|   456789|   456789|   456789|   456789|   456789|123      |
|123456789|123456789 |123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
`, e => assert(false, e));
  });

  it("same col", () => {
    const b = Board.loadPuzzle(BLANK);
    b.loadPossibilities(`
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123 56789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|1234 6789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|12345 789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|123456789|
`);
    // 3 cells in row 0 have the same possibilities
    assert.equal(Tuples.column(b), 0); // expect no fixes!
    //console.log(b.savePossibilities());
    b.checkPossibilities(`
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|   456   |123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
|123456789|123456789|123456789|123   789|123456789|123456789|123456789|123456789|123456789|
`, e => assert(false, e));
  });
});
